template Host "generic-host" {
  max_check_attempts = 3
  check_interval = 1m
  retry_interval = 30s
  vars.notification["mail"] = {
    groups = [ "admins" ]
  }

  check_command = "hostalive"
  vars.pnp_check_name = "check_host-alive"
}

template Service "generic-service" {
  max_check_attempts = 5
  check_interval = 1m
  retry_interval = 30s

  // pnp4nagios doesn't correctly detect template because it expects
  // check_command to begin with "check_". This is corrected here and
  // in perfdata conf by adding pnp_check_name for overriding template.
  // See: https://github.com/Icinga/icinga2/issues/1886
  vars.pnp_check_name = "check_$service.check_command$"
}

template Notification "generic-notification" {
  vars += {
    notification_icingaweb2url = "http://{{ ansible_fqdn }}"
    notification_from = "Icinga Host Monitoring <icinga@{{ ansible_fqdn }}>"
  }

  period = "24x7"
}

template Notification "mail-host-notification" {
  import "generic-notification"

  command = "mail-host-notification"

  states = [ Down ]
  types = [ Problem, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]
}

template Notification "mail-service-notification" {
  import "generic-notification"

  command = "mail-service-notification"

  states = [ Warning, Critical, Unknown ]
  types = [ Problem, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]
}

template Service "ssh-service" {
  max_check_attempts = 5
  check_interval = 1m
  retry_interval = 30s

  // Set correct template for services called with ssh.
  vars.pnp_check_name = "check_$check_command$"

  vars.check_command = check_command
  vars += get_check_command(check_command).vars
  vars.by_ssh_command = {{ '{{' }} get_check_command(service.vars.check_command).command {{ '}}' }}
  vars.by_ssh_arguments = {{ '{{' }} get_check_command(service.vars.check_command).arguments {{ '}}' }}
  vars.by_ssh_timeout = {{ icinga2_ssh_timeout }}

  check_command = "by_ssh"
}

template Service "mysql-health-service" {
  check_command = "mysql_health"
  import "ssh-service"

  vars.mysql_health_lookback = 1800
  vars.mysql_health_extraopts = "mysql@/etc/nagios-plugins.ini"
  vars.mysql_health_hostname = "127.0.0.1"
}
